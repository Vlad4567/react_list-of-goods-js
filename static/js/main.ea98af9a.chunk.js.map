{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_LENGTH","App","useState","reversedField","setReversedField","sortField","setSortField","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,iBAC5BC,EAAoB,SA4BnB,IAAMC,EAAM,WACjB,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SAA0BC,EAA1B,GAAgE,IAA7BH,EAA4B,EAA5BA,UAAWF,EAAiB,EAAjBA,cACtCM,EAAa,YAAOD,GAqB1B,OAnBIH,GACFI,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQP,GACN,KAAKN,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXX,GACFM,EAAcM,UAGTN,EAMcO,CACnBlB,EACA,CAAEO,YAAWF,kBAGf,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,oCAEPZ,IAAcN,EACV,WACA,IAENoB,QAAS,kBAAMb,EAAaP,IAR9B,iCAaA,wBACEmB,KAAK,SACLD,UAAS,uCAEPZ,IAAcL,EACV,WACA,IAENmB,QAAS,kBAAMb,EAAaN,IAR9B,4BAaA,wBACEkB,KAAK,SACLD,UAAS,uCAlEQ,YAoEfZ,EACI,WACA,IAENc,QAAS,kBAAMf,GAAkBD,IARnC,qBAaA,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPb,EAAa,IACbF,GAAiB,IALrB,sBAYF,6BACGG,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC3GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ea98af9a.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICALLY = 'alphabetically';\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_REVERSE = 'reverse';\n\nfunction getPreparedGoods(goods, { sortField, reversedField }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversedField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [reversedField, setReversedField] = useState(false);\n  const [sortField, setSortField] = useState('');\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField, reversedField },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info\n          ${\n            sortField !== SORT_FIELD_ALPHABETICALLY\n              ? 'is-light'\n              : ''\n          }`}\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success\n          ${\n            sortField !== SORT_FIELD_LENGTH\n              ? 'is-light'\n              : ''\n          }`}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning\n          ${\n            sortField !== SORT_FIELD_REVERSE\n              ? 'is-light'\n              : ''\n          }`}\n          onClick={() => setReversedField(!reversedField)}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setSortField('');\n            setReversedField(false);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}